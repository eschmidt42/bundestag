<!doctype html><html><head> <title>Enodia Verification</title> <script src="/.enodia/static/sha256.js"></script> <script> var cookieName = "enodia"; function verifySolution(evl, sol) { var req = new XMLHttpRequest(); req.addEventListener("load", onResponse); req.open("POST", "/.enodia/verify"); req.send(sol + "-" + evl); } function onResponse() { if (this.status === 200) { setAuthKey(cookieName, this.responseText); return; } else if (this.status === 400) { window.chl = this.responseText; work(); return; } document.location.reload(); } function updateUrlParameter(uri, key, value) { var i = uri.indexOf('#'); var hash = i === -1 ? '' : uri.substr(i); uri = i === -1 ? uri : uri.substr(0, i); var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i"); var separator = uri.indexOf('?') !== -1 ? "&" : "?"; if (uri.match(re)) { uri = uri.replace(re, '$1' + key + "=" + value + '$2'); } else { uri = uri + separator + key + "=" + value; } return uri + hash; } function getParameterByName(name, url = window.location.href) { name = name.replace(/[\[\]]/g, '\\$&'); var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url); if (!results) return null; if (!results[2]) return null; return decodeURIComponent(results[2].replace(/\+/g, ' ')); } function getCookie(name) { const value = `; ${document.cookie}`; const parts = value.split(`; ${name}=`); if (parts.length === 2) return parts.pop().split(';').shift(); } function ensureLocalURL(r) { if (typeof r === "undefined" || r === null) { r = "/"; } var l = document.createElement("a"); l.href = r; return l.pathname + l.search; } function setAuthKey(n, v) { document.cookie = n + "=" + v + "; path=/; Domain=" + document.domain; document.cookie = n + "=" + v + "; path=/; SameSite=None; Secure; Domain=" + document.domain; window.location = updateUrlParameter(ensureLocalURL(getParameterByName("redirect")), n, v); } function work() { var chl = window.chl; var cld = decodeEnvelope(chl).content; switch (cld.provider) { case "pow": var sol = solvePOW(cld.challenge); verifySolution(chl, sol); break; case "button": solveButton(chl); break; case "captcha": solveCaptcha(chl, cld.challenge); break; case "recaptcha": solveReCaptcha(chl, cld.challenge); break; } } function decodeEnvelope(evl) { return JSON.parse(atob(evl.split(".")[0])); } function solvePOW(cl) { var chl = document.createElement("div"); chl.innerText = "Please wait, Enodia is verifying your client."; document.body.appendChild(chl); var sol = 0; while (!validSolution(cl, sol)) { sol++; } document.body.removeChild(chl); return sol; } function solveButton(evl) { var div = document.createElement("div"); var solve = function () { div.remove(); verifySolution(evl, ""); }; var msg = document.createElement("p"); msg.innerText = "Please press the button / Bitte drÃ¼cken Sie den Button: "; var btn = document.createElement("button"); btn.innerHTML = "continue / fortfahren"; btn.onclick = solve; msg.appendChild(btn); div.appendChild(msg); document.body.appendChild(div); } function solveCaptcha(evl, cl) { var div = document.createElement("div"); div.id = "captcha"; var img = document.createElement("img"); img.src = "/.enodia/provider/image?evl=" + encodeURIComponent(evl); div.appendChild(img); var audio = document.createElement("audio"); audio.controls = true; audio.preload = "none"; audio.src = "/.enodia/provider/audio?evl=" + encodeURIComponent(evl); div.appendChild(audio); var input = document.createElement("input"); div.appendChild(input); var btn = document.createElement("button"); btn.innerHTML = "Verifizieren"; btn.onclick = function () { div.remove(); verifySolution(evl, input.value); }; div.appendChild(btn); document.body.appendChild(div); } var reCaptchaIsLoaded = false; function solveReCaptcha(evl, cl) { if (!reCaptchaIsLoaded) { window.reCaptchaLoadedCallback = () => { reCaptchaIsLoaded = true; solveReCaptcha(evl, cl); }; var reCaptchaScript = document.createElement("script"); reCaptchaScript.src = "https://www.google.com/recaptcha/api.js?render=explicit&onload=reCaptchaLoadedCallback"; document.head.appendChild(reCaptchaScript); return; } var div = document.createElement("div"); div.id = "recaptcha"; document.body.appendChild(div); grecaptcha.render('recaptcha', { 'sitekey': cl, 'callback': function (response) { div.remove(); verifySolution(evl, btoa(response)); }, 'error-callback': function () { document.location.reload(); } }); } function validSolution(cl, sol) { var hash = CryptoJS.SHA256(cl + sol).toString(); return hash.substr(0, 4) == "0000"; } window.onload = function () { window.chl = "eyJleHAiOjE2Nzk5MjU5MjIsImNvbnRlbnQiOnsicHJvdmlkZXIiOiJwb3ciLCJjaGFsbGVuZ2UiOiJBRFVOQUlHTlBVUEFHQVhUR1FBRERMRk9LTlNUUU9FRyIsInN0ZXAiOjB9LCJhdWQiOiJ2ZXJpZmljYXRpb24iLCJIb3N0Ijoid3d3LmJ1bmRlc3RhZy5kZSIsIlNvdXJjZUlQIjoiNzkuMjQ4LjE1My4yNTAiLCJDb25maWdJRCI6IjhkYWRjZTEyNWZkMmMzOTMyYjk0M2I1MmU5ZDJjZDY1MDU3NTRlMTYyMjEyYTJjZTFiYjVhZjE1YzBkNGJiZmUifQ==.MbvdLMdJKlrgAA9l9Iou07ZHMxZnmEztoIxe3AHLa1w="; if (!navigator.cookieEnabled) { document.getElementById('no-cookie').style.display = "block"; } if (getParameterByName(cookieName) !== null && getCookie(cookieName) === undefined) { document.getElementById('loop-warning').style.display = "block"; } work(); }; </script></head><body> We're experiencing heavy load. / Unsere Systeme haben derzeit hohe Last. <noscript> You need to allow Javascript to verify your Browser.<br> Bitte aktivieren sie Javascript um ihren Browser zu validieren. </noscript> <span id="no-cookie" style="display: none"> You need to enable Cookies to verify your Browser.<br> Bitte aktivieren Sie Cookies um Ihren Browser zu verifizieren. </span> <span id="loop-warning" style="display: none"> If you see this and the verification repeats, please try a different browser.<br> Wenn sie dies sehen und die Verifikation sich wiederholt, versuchen sie bitte einen anderen Browser. </span></body></html>
